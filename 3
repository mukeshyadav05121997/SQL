
                       ::constrainst::
SQL constraints are used to specify rules for the data in a table
            1.primary key
               ALTER TABLE Persons ADD PRIMARY KEY (ID);
            2.foreign key
            IN MYSQL
              Foreign key(personID) reference person(PersonID)
            SQLSERVER/ORACLE
              PersonID int FOREIGN KEY REFERENCES Persons(PersonID)
);
            3.unique
            4.check:means limitaion like check(age>10);
            5.Not NULL
 =====================================================================================================================================
            
                       ::key::
A key is a single or combination of multiple fields in a table. 
Keys are also used to create relationship among different database tables or views

  TYPES OF KEY
   1.Primary Key
       >Primary Key is a field that can be used to identify all the tuples uniquely in the database. 
       >Only one of the columns can be declared as a primary key. A Primary Key can not have a NULL value.
  
  2.Unique Key
       >Unique Key can be a field or set of fields that can be used to uniquely identify the tuple from the database. 
       >One or more fields can be declared as a unique Key. The unique Key column can also hold the NULL value.
       >Use of Unique Key improves the performance of data retrieval.
       >It makes searching for records from the database much more faster & efficient.
  
  3.Candidate Key
      > Candidate Key can be a column or group of columns that can qualify for the Unique Key. 
      > Every table has at least one Candidate Key.
      > A table may have one or more Candidate Key.  
       >Each Candidate Key can work as a Primary Key if required in certain scenarios.

      @ Example: In the above given relational table, “cust_id”, “cust_aadhaar_number”, “cust_pan_number” are the Candidate Key 
        as it can identify all the row uniquely from the table. These columns also qualify the criteria to be a Primary Key
  
  4.Alternate Key
     > Alternate Key is that Key which can be used as a Primary Key if required.
     > Alternate Key also qualifies to be a Primary Key but for the time being, It is not the Primary Key
     
     #Example: In the above given relational table, “cust_aadhaar_number”, “cust_pan_number”  are the Alternate Key 
      as both of the columns can be a Primary Key but not yet selected for the Primary Key
   
  5.Composite Key
   > Composite Key is also known as Compound Key / Concatenated Key. 
   > Composite Key refers to a group of two or more columns that can be used to identify a tuple from the table uniquely.
   > A group of the column in combination with each other can identify a row uniquely 
   > but a single column of that group doesn’t promise to identify the row uniquely.

     Example: In the above given relational table i.e. 
     Order Table, “cust_id”, “order_month_year”  group of these columns used 
     in combination to identify the tuple uniquely in the Order Table. 
     The individual column of this table is not able to identify the tuple uniquely from the Order table.
   
  6.Super Key
   > Super Key is a combination of columns, each column of the table remains dependent on it. 
   > Super Key may have some more columns in the group which may or may not be necessary to identify the tuple uniquely from the table. 
   > Candidate Key is the subset of the Super Key. 
   > Candidate Key is also known as minimal Super Key.

      Example: In the above given relational table,  Primary Key, Candidate Key & Unique Key is the Super Key.  
      As a single column of Customer Table i.e ‘cust_id’ is sufficient to identify the tuples uniquely from the table.
      Any set of the column which contains ‘cust_aadhaar_number’, ‘cust_pan_number’ is a Super Key
   
  7.Foreign Key
   >A foreign key is a column which is known as Primary Key in the other table i.e.
   >A Primary Key in a table can be referred to as a Foreign Key in another table.
   >Foreign Key may have duplicate & NULL values if it is defined to accept NULL values.
  

=====================================================================================================================================
      DDL:DDL commands can be used to add, remove, or modify tables within in a database.
 1.create:create table tablename(columnname);
 2.alter:alter table tablename add column columnname DATATYPE;
 3.drop:alter table tablename drop column columnname;drop table tablename;
 @@@ alter on primary key
   1.alter table tablename add primary key (column name);
   1.alter table tablename drop primar key;
 4.Modify:It is used to change the datatype of column; ex:alter table tablename modify columnname <datatype>
 
 5.alter table tablename
 add constraints fk_petowner
 foreign key(owner_id) refrences <people/tablename> (id);
 
 6.alter table tablename
 add constraints u_mail unique(email/columnname);
 
 
 5.Rename:alter table tablename change 'old column' 'new column' datatype;
 6.Truncate:truncate is used to remove the feild; truncate table tablename;
 
 DROP is a DDL Command. Objects deleted using DROP are permanently lost and it cannot be rolled back. Unlike TRUNCATE which only deletes the data of the tables,
 the DROP command deletes the data of the table as well as removes the entire schema/structure of the table from the database.

